{
    "Description": "HRPotter is an AWS Serverless Application running in Amazon Lambda.",
    "Parameters": {
        "RepositoryName": {
            "Default": "HRPotter-2.0",
            "Type": "String",
            "Description": "GitHub repository name"
        },
        "BranchName": {
            "Default": "develop",
            "Type": "String",
            "Description": "GitHub branch name"
        },
        "GitHubOwner": {
            "Default": "Rashair",
            "Type": "String"
        }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Outputs": {
        "ApiURL": {
            "Description": "API endpoint URL",
            "Value": {
                "Fn::Sub": "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/"
            }
        }
    },
    "Conditions": {},
    "Resources": {
        "s3staticcontenthrpotter": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "PublicRead",
                "VersioningConfiguration": {
                    "Status": "Suspended"
                }
            }
        },
        "hrpottercloudfront": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "CacheBehaviors": [{
                            "TargetOriginId": "S3-staticcontenthrpotter",
                            "ViewerProtocolPolicy": "allow-all",
                            "ForwardedValues": {
                                "Cookies": {
                                    "Forward": "none"
                                },
                                "QueryString": "false"
                            },
                            "PathPattern": "js/*",
                            "CachedMethods": ["HEAD", "GET"],
                            "AllowedMethods": ["HEAD", "GET"],
                            "MinTTL": 0
                        }, {
                            "TargetOriginId": "S3-staticcontenthrpotter",
                            "ViewerProtocolPolicy": "allow-all",
                            "ForwardedValues": {
                                "Cookies": {
                                    "Forward": "none"
                                },
                                "QueryString": "false"
                            },
                            "PathPattern": "css/*",
                            "CachedMethods": ["HEAD", "GET"],
                            "AllowedMethods": ["HEAD", "GET"],
                            "MinTTL": 0
                        }, {
                            "TargetOriginId": "S3-staticcontenthrpotter",
                            "ViewerProtocolPolicy": "allow-all",
                            "ForwardedValues": {
                                "Cookies": {
                                    "Forward": "none"
                                },
                                "QueryString": "false"
                            },
                            "PathPattern": "favicon.ico",
                            "CachedMethods": ["HEAD", "GET"],
                            "AllowedMethods": ["HEAD", "GET"],
                            "MinTTL": 0
                        }
                    ],
                    "Origins": [{
                            "S3OriginConfig": {},
                            "Id": "S3-staticcontenthrpotter",
                            "DomainName": {
                                "Fn::GetAtt": ["s3staticcontenthrpotter", "DomainName"]
                            }
                        }, {
                            "OriginPath": "/Prod",
                            "CustomOriginConfig": {
                                "OriginProtocolPolicy": "http-only",
                                "HTTPPort": "80",
                                "HTTPSPort": "443"
                            },
                            "Id": "APIGateway",
                            "DomainName": {
                                "Fn::Sub": "cz7k3d7r2i.execute-api.${AWS::Region}.amazonaws.com"
                            }
                        }
                    ],
                    "PriceClass": "PriceClass_All",
                    "Enabled": true,
                    "DefaultCacheBehavior": {
                        "TargetOriginId": "APIGateway",
                        "ViewerProtocolPolicy": "allow-all",
                        "ForwardedValues": {
                            "Cookies": {
                                "Forward": "all"
                            },
                            "QueryString": "false"
                        },
                        "CachedMethods": ["HEAD", "GET"],
                        "AllowedMethods": ["HEAD", "DELETE", "POST", "GET", "OPTIONS", "PUT", "PATCH"],
                        "MinTTL": 0
                    },
                    "ViewerCertificate": {
                        "CloudFrontDefaultCertificate": "true",
                        "MinimumProtocolVersion": "TLSv1"
                    },
                    "Restrictions": {
                        "GeoRestriction": {
                            "RestrictionType": "none",
                            "Locations": []
                        }
                    }
                }
            }
        },
        "AspNetCoreFunctionProxyResourcePermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "AspNetCoreFunctionAliasAspNetCoreFunction"
                },
                "SourceArn": {
                    "Fn::Sub": ["arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/*", {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            }
                        }
                    ]
                }
            }
        },
        "AspNetCoreFunctionVersion2138e61bb2": {
            "DeletionPolicy": "Retain",
            "Type": "AWS::Lambda::Version",
            "Properties": {
                "FunctionName": {
                    "Ref": "AspNetCoreFunction"
                }
            }
        },
        "HrpotterProjectCf": {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
                "LogsConfig": {
                    "S3Logs": {
                        "Status": "DISABLED",
                        "EncryptionDisabled": false
                    },
                    "CloudWatchLogs": {
                        "Status": "ENABLED",
                        "GroupName": "hrpotter-build-project-logs",
                        "StreamName": "hrpotter-build-project-log-stream"
                    }
                },
                "Cache": {
                    "Type": "NO_CACHE"
                },
                "Description": "Project for hrpotter-main-pipeline",
                "ServiceRole": "arn:aws:iam::925000763740:role/service-role/hrpotter-project-role",
                "Artifacts": {
                    "Packaging": "NONE",
                    "EncryptionDisabled": false,
                    "Type": "CODEPIPELINE",
                    "Name": "hrpotter-project-cf"
                },
                "TimeoutInMinutes": 15,
                "BadgeEnabled": false,
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_LARGE",
                    "ImagePullCredentialsType": "CODEBUILD",
                    "PrivilegedMode": true,
                    "Image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
                    "EnvironmentVariables": [],
                    "Type": "LINUX_CONTAINER"
                },
                "FileSystemLocations": [],
                "Source": {
                    "InsecureSsl": false,
                    "Type": "CODEPIPELINE"
                },
                "QueuedTimeoutInMinutes": 60,
                "Name": "hrpotter-project-cf"
            }
        },
        "AspNetCoreFunctionRootResourcePermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "AspNetCoreFunctionAliasAspNetCoreFunction"
                },
                "SourceArn": {
                    "Fn::Sub": ["arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/", {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            }
                        }
                    ]
                }
            }
        },
        "s3policyhrpotterfilesstorage": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Action": "s3:*",
                            "Resource": [{
                                    "Fn::Join": ["", ["arn:aws:s3:::", {
                                                "Ref": "s3hrpotterfilesstorage"
                                            }, ""]]
                                }, {
                                    "Fn::Join": ["", ["arn:aws:s3:::", {
                                                "Ref": "s3hrpotterfilesstorage"
                                            }, "/*"]]
                                }
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": "arn:aws:iam::925000763740:role/HRPotterStack-AspNetCoreFunctionRole-11HVXI2CUCG3C"
                            }
                        }
                    ]
                },
                "Bucket": {
                    "Ref": "s3hrpotterfilesstorage"
                }
            }
        },
        "AspNetCoreFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Action": ["sts:AssumeRole"],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": ["lambda.amazonaws.com"]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::925000763740:policy/service-role/AWSLambdaRDSProxyExecutionRole-0a404fe4-7fc9-4afc-8737-3fdb29cc8051",
                    "arn:aws:iam::925000763740:policy/decryptAwsSecretManager",
                    "arn:aws:iam::aws:policy/AmazonRDSFullAccess"
                ],
                "Tags": [{
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ]
            }
        },
        "s3policystaticcontenthrpotter": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Action": "s3:GetObject",
                            "Principal": "*",
                            "Resource": {
                                "Fn::Join": ["", ["arn:aws:s3:::", {
                                            "Ref": "s3staticcontenthrpotter"
                                        }, "/*"]]
                            },
                            "Effect": "Allow",
                            "Sid": "PublicReadGetObject"
                        }
                    ]
                },
                "Bucket": {
                    "Ref": "s3staticcontenthrpotter"
                }
            }
        },
        "ServerlessRestApiProdStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "ServerlessRestApiDeployment7ab9fd8247"
                },
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "StageName": "Prod"
            }
        },
        "HrpotterPipelineWebhook": {
            "Type": "AWS::CodePipeline::Webhook",
            "Properties": {
                "AuthenticationConfiguration": {
                    "SecretToken": "{{resolve:secretsmanager:GitHubAuth:SecretString:token}}"
                },
                "Name": "hrpotter-pipeline-webhook",
                "TargetPipelineVersion": {
                    "Fn::GetAtt": ["HrpotterPipelineCf", "Version"]
                },
                "RegisterWithThirdParty": true,
                "Authentication": "GITHUB_HMAC",
                "TargetPipeline": {
                    "Ref": "HrpotterPipelineCf"
                },
                "TargetAction": "Source",
                "Filters": [{
                        "MatchEquals": "refs/heads/{Branch}",
                        "JsonPath": "$.ref"
                    }
                ]
            }
        },
        "HrpotterPipelineCf": {
            "Type": "AWS::CodePipeline::Pipeline",
            "Properties": {
                "RoleArn": "arn:aws:iam::925000763740:role/service-role/AWSCodePipelineServiceRole-us-east-1-hrpotter-pipeline",
                "Stages": [{
                        "Name": "Source",
                        "Actions": [{
                                "InputArtifacts": [],
                                "Name": "Source",
                                "Region": "us-east-1",
                                "Namespace": "SourceVariables",
                                "ActionTypeId": {
                                    "Category": "Source",
                                    "Owner": "ThirdParty",
                                    "Version": "1",
                                    "Provider": "GitHub"
                                },
                                "OutputArtifacts": [{
                                        "Name": "SourceArtifact"
                                    }
                                ],
                                "Configuration": {
                                    "Owner": {
                                        "Ref": "GitHubOwner"
                                    },
                                    "Repo": {
                                        "Ref": "RepositoryName"
                                    },
                                    "PollForSourceChanges": "false",
                                    "Branch": {
                                        "Ref": "BranchName"
                                    },
                                    "OAuthToken": "{{resolve:secretsmanager:GitHubAuth:SecretString:token}}"
                                },
                                "RunOrder": 1
                            }
                        ]
                    }, {
                        "Name": "Build",
                        "Actions": [{
                                "InputArtifacts": [{
                                        "Name": "SourceArtifact"
                                    }
                                ],
                                "Name": "Build",
                                "Region": "us-east-1",
                                "Namespace": "BuildVariables",
                                "ActionTypeId": {
                                    "Category": "Build",
                                    "Owner": "AWS",
                                    "Version": "1",
                                    "Provider": "CodeBuild"
                                },
                                "OutputArtifacts": [{
                                        "Name": "BuildArtifact"
                                    }
                                ],
                                "Configuration": {
                                    "ProjectName": {
                                        "Ref": "HrpotterProjectCf"
                                    }
                                },
                                "RunOrder": 1
                            }
                        ]
                    }, {
                        "Name": "Deploy",
                        "Actions": [{
                                "InputArtifacts": [{
                                        "Name": "BuildArtifact"
                                    }
                                ],
                                "Name": "hrpotter-cf-deploy",
                                "Region": "us-east-1",
                                "ActionTypeId": {
                                    "Category": "Deploy",
                                    "Owner": "AWS",
                                    "Version": "1",
                                    "Provider": "CloudFormation"
                                },
                                "OutputArtifacts": [],
                                "Configuration": {
                                    "StackName": "HRPotterStack",
                                    "ActionMode": "CREATE_UPDATE",
                                    "RoleArn": "arn:aws:iam::925000763740:role/cfn-lambda-pipeline",
                                    "Capabilities": "CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND",
                                    "TemplatePath": "BuildArtifact::outputtemplate.yml"
                                },
                                "RunOrder": 1
                            }
                        ]
                    }
                ],
                "ArtifactStore": {
                    "Type": "S3",
                    "Location": "publishbuildsbucket"
                },
                "Name": "hrpotter-pipeline-cf"
            }
        },
        "s3hrpotterfilesstorage": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "Private",
                "VersioningConfiguration": {
                    "Status": "Suspended"
                }
            }
        },
        "ServerlessRestApiDeployment7ab9fd8247": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "Description": "RestApi deployment id: 7ab9fd8247dc0138441009cd3991b7ce086f00b2",
                "StageName": "Stage"
            }
        },
        "AspNetCoreFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "publishbuildsbucket",
                    "S3Key": "877d56be56284d44aadad5393db57e6b"
                },
                "Tags": [{
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 512,
                "Environment": {
                    "Variables": {
                        "CloudFrontDomain": {
                            "Fn::GetAtt": ["hrpottercloudfront", "DomainName"]
                        },
                        "BucketName": {
                            "Ref": "s3hrpotterfilesstorage"
                        },
                        "StorageService": "S3"
                    }
                },
                "Handler": "HRPotter::HRPotter.LambdaEntryPoint::FunctionHandlerAsync",
                "Role": {
                    "Fn::GetAtt": ["AspNetCoreFunctionRole", "Arn"]
                },
                "Timeout": 30,
                "Runtime": "dotnetcore3.1"
            }
        },
        "ServerlessRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Body": {
                    "info": {
                        "version": "1.0",
                        "title": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    "paths": {
                        "/{proxy+}": {
                            "x-amazon-apigateway-any-method": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AspNetCoreFunctionAliasAspNetCoreFunction}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/": {
                            "x-amazon-apigateway-any-method": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AspNetCoreFunctionAliasAspNetCoreFunction}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        }
                    },
                    "swagger": "2.0"
                }
            }
        },
        "AspNetCoreFunctionAliasAspNetCoreFunction": {
            "Type": "AWS::Lambda::Alias",
            "Properties": {
                "FunctionVersion": {
                    "Fn::GetAtt": ["AspNetCoreFunctionVersion2138e61bb2", "Version"]
                },
                "FunctionName": {
                    "Ref": "AspNetCoreFunction"
                },
                "Name": "AspNetCoreFunction"
            }
        },
        "AuroraDbCluster": {
            "Type": "AWS::RDS::DBCluster",
            "Properties": {
                "AssociatedRoles": [],
                "AvailabilityZones": [
                    "us-east-1a",
                    "us-east-1c",
                    "us-east-1d"
                ],
                "BacktrackWindow": 0,
                "BackupRetentionPeriod": 1,
                "DatabaseName": "hrpotter_db",
                "DBClusterParameterGroupName": "default.aurora5.6",
                "DBSubnetGroupName": "default-vpc-1cc8db66",
                "DeletionProtection": true,
                "EnableCloudwatchLogsExports": [
                    "error",
                    "general"
                ],
                "EnableHttpEndpoint": false,
                "EnableIAMDatabaseAuthentication": false,
                "Engine": "aurora",
                "EngineVersion": "5.6.10a",
                "EngineMode": "provisioned",
                "KmsKeyId": "arn:aws:kms:us-east-1:925000763740:key/cfe0c0f5-fe4f-4f15-aff6-2789475cdf67",
                "MasterUsername": "{{resolve:secretsmanager:HrpotterDbCredentials:SecretString:username}}",
                "MasterUserPassword": "{{resolve:secretsmanager:HrpotterDbCredentials:SecretString:password}}",
                "Port": 3306,
                "SourceRegion": "us-east-1",
                "StorageEncrypted": true,
                "UseLatestRestorableTime": true,
                "VpcSecurityGroupIds": ["sg-f291c8d1"]
            }
        },
        "HrpotterClusterInstance1": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBInstanceClass": "db.t3.small",
                "Engine": "aurora",
                "AllocatedStorage": 1,
                "DBParameterGroupName": "default.aurora5.6",
                "AvailabilityZone": "us-east-1a",
                "DBSubnetGroupName": "default-vpc-1cc8db66",
                "MultiAZ": false,
                "AutoMinorVersionUpgrade": true,
                "LicenseModel": "general-public-license",
                "OptionGroupName": "default:aurora-5-6",
                "PubliclyAccessible": true,
                "StorageType": "aurora",
                "DBClusterIdentifier": {
                    "Ref": "AuroraDbCluster"
                },
                "CACertificateIdentifier": "rds-ca-2019",
                "MonitoringInterval": 0,
                "PromotionTier": 1,
                "EnablePerformanceInsights": false,
                "EnableCloudwatchLogsExports": [
                    "error",
                    "general"
                ]
            }
        }
    }
}
